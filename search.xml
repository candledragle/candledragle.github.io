<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[pass密码保存工具]]></title>
    <url>%2F2017%2F08%2F05%2Fpass%E5%AF%86%E7%A0%81%E4%BF%9D%E5%AD%98%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[安装 1mac 系统：brew install pass 生成GPG密匙对 12gpg --gen-key注意：运行以上的命令以生成 GPG 密钥对时会有一系列的问题询问，谨慎输入问题的答案，其中有一些只要使用默认值即可 初始化密码存储 1pass init s_abcabc@126.com 查看密码目录树 12345pass或pass ls或pass show 插入一个新密码 123pass insert &lt;密码路径&gt;例子：保存邮箱密码pass insert eMail/s_abcabc@126.com 显示已有密码 12345pass show &lt;密码路径&gt;例子：pass show eMail/s_abcabc@126.com会弹出一个对话框让你输入pass的密码输入完成后将会在终端显示s_abcabc@126.com邮箱的密码 生成密码 1234Generate new password zx2c4@laptop ~ $ pass generate Email/jasondonenfeld.com 15 The generated password to Email/jasondonenfeld.com is: $(-QF&amp;Q=IN2nFBx copy密码 1234Copy existing password to clipboard zx2c4@laptop ~ $ pass -c Email/zx2c4.com Copied Email/jason@zx2c4.com to clipboard. Will clear in 45 sec- onds.]]></content>
      <tags>
        <tag>pass、密码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonStudy]]></title>
    <url>%2F2017%2F08%2F04%2FpythonStudy%2F</url>
    <content type="text"><![CDATA[Python 中from… import 与 import…. as的区别 from… import ​ 如 from A import b,相当于 ​ import A ​ b = A.b ​ 再如： ​ “from t2 import var1” 相当于： ​ import t2 ​ var1 = t2.var1 ​ 在此过程中有一个隐含的赋值的过程 ​ import… as ​ import A as B，给予A库一个B的别称，帮助记忆。]]></content>
  </entry>
  <entry>
    <title><![CDATA[fastJson将javabean转为Map]]></title>
    <url>%2F2017%2F07%2F10%2Fjson%2F</url>
    <content type="text"><![CDATA[问题：我们有时候希望写的javabean转换为Map方便数据操作，那么我们怎么做呢？ ​ 1234567891011答： Person person = new Person(); person.setUserName(&quot;盛艳明&quot;); person.setAge(27); //将javabean转为map Map map = JSON.toJSON(person); System.out.println(map.toString());]]></content>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用网址]]></title>
    <url>%2F2017%2F07%2F08%2F%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%2F</url>
    <content type="text"><![CDATA[vim 常用网址VimAwesome 很方便查找各种vim常用插件]]></content>
      <tags>
        <tag>常用网址统计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html5_study]]></title>
    <url>%2F2017%2F07%2F06%2Fhtml5-study%2F</url>
    <content type="text"><![CDATA[HTML 5 全局 contenteditable 属性 为了写一个富文本编辑器上个周末和这个周一真的很累，本来想着用一个开源大神写的richEdit来实现发现还是有很多局限性的，richedit 就是使用了html 5的一个global 属性contenteditable属性让div具有了可编辑内容的效果，但是如果我想在div中添加一个图片，图片点击后右上角会出现一个删除按钮这样稍微复杂一些的操作就不行了，因为这个属性是让div里面包含的所有的子元素都可以编辑。 我认为的知识点 html dom tagName 属性 ​ 定义和用法 tagName 属性返回元素的标签名。 在 HTML 中，tagName 属性的返回值始终是大写的。]]></content>
  </entry>
  <entry>
    <title><![CDATA[gitsubnodule的使用]]></title>
    <url>%2F2017%2F07%2F02%2Fgitsubnodule%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[git 仓库中添加子仓库 git submodule add &lt;子module的远程仓库地址&gt; git 删除子仓库 Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules. Delete the relevant section from .git/config . Run git rm –cached path_to_submodule (no trailing slash). Run rm -rf .git/modules/path_to_submodule. 问题记录：问题一： 重新add子module的时候提示： ‘repo’ already exists in the index 解决办法： 123456789$ rm -Rf rack/$ git submodule add git@github.com:schacon/rack.git rack&apos;rack&apos; already exists in the indexYou have to unstage the rack directory first. Then you can add the submodule:$ git rm -r rack$ git submodule add git@github.com:schacon/rack.git rack]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[learn_git]]></title>
    <url>%2F2017%2F07%2F01%2Flearn-git%2F</url>
    <content type="text"><![CDATA[git path的用法git 配置冲突合并工具KDiff3123git config --global --add diff.guitool kdiff3git config --global --add difftool.kdiff3.path &quot;/Applications/kdiff3.app/Contents/MacOS/kdiff3&quot;git config --global --add difftool.kdiff3.trustExitCode false KDiff3下载地址]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo常用命令总结]]></title>
    <url>%2F2017%2F07%2F01%2Farticle-title%2F</url>
    <content type="text"><![CDATA[新写一篇blog:hexo new post &quot;article-tile&quot; 这个时候就可以在hexo根目录下的source\_posts下看到新生成的文件article-title.md 生成hexo g 部署hexo d 上面的两个命令可以组合成一个 ​ 还可以使用组合命令：hexo g -d 以上内容是生成和发布博客的一般流程，下面我记录一下我的github + hexo搭建流程供有需要的人参考和学习 申请github 这个就不多说了 建立github.io 这个自己可以百度一下教程 搭建hexo !官网 :有详细的使用说明，本教程就是说明一下其中常用的 安装Node.js $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash nvm install stable 安装hexo npm install -g hexo-cli hexo init cd npm install 安装主题 Yilia NexT 1这些都有相关的教程可以去github上搜索，然后看教程配置使用 ​]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
