<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[点滴积累c指针]]></title>
    <url>%2F2017%2F11%2F23%2F%E7%82%B9%E6%BB%B4%E7%A7%AF%E7%B4%AFc%E6%8C%87%E9%92%88%2F</url>
    <content type="text"><![CDATA[推荐的质料 提取密码：6nh9 未完成待续]]></content>
      <tags>
        <tag>c、c++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gdb学习笔记]]></title>
    <url>%2F2017%2F11%2F22%2Fgdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[系统环境：mac 下载安装完gdb后第一步是添加证书否者会出现以下提示 (please check gdb is codesigned - see taskgated(8)) mac下添加证书连接 编译生成可执行的文件（加上-g会生成可调试的文件） gcc -g test.c -o test 会多生成一个文件，这个文件在我电脑上的名字是.dSYM //todo 查阅资料了解这个文件的作用 常用命令：（注：使用enter| 空格键是重复上一个命令）123456789101112l(list) :列出源码n(next) :单点调试(就是单条语句执行)p(print):输出你想打印的值break :打断点 例如 break 17表示把断点打在第17行info break :查看所有断点的信息bt: 查看函数的堆栈信息finish:退出函数c: 继续运行q: 退出gdb]]></content>
  </entry>
  <entry>
    <title><![CDATA[Android爬坑记录]]></title>
    <url>%2F2017%2F11%2F19%2FAndroid%E7%88%AC%E5%9D%91%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[在开发过程中遇到这么一个需求：需要一个可折叠的列表并且在子列表中有EditText的输入和回显的交互 可折叠的列表很自然的就想到了google的原生控件ExpandableListView但是知道为什么ExpanableListView好像并不怎么友好，在使用过程中发现好多不可思议的地方比如说getChildView会刷两次。好了闲话不多说，问题要逐一解决，先来谈谈解决ExpandListView和EditView的问题。 思路一：为EditView设置内容监听 12345678910111213141516171819holder.label_et.addTextChangedListener(new TextWatcher() &#123; @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) &#123; &#125; @Override public void onTextChanged(CharSequence s, int start, int before, int count) &#123; &#125; @Override public void afterTextChanged(Editable s) &#123; String text = holder.label_et.getText().toString(); if(!TextUtils.isEmpty(text))&#123; item.setLable(text); &#125; &#125; &#125;); 发现问题很诡异，afterTextChanged 被执行了很多遍，最后失败告终。看日志感觉解释不清楚就先不贴了，有时间研究下。 思路二：在EditText焦点发生变化的时候再获取文本内容 1234567891011holder.label_et.setOnFocusChangeListener(new View.OnFocusChangeListener() &#123; @Override public void onFocusChange(View v, boolean hasFocus) &#123; if(!hasFocus)&#123; String text = holder.label_et.getText().toString(); if(!TextUtils.isEmpty(text))&#123; item.setLable(text); &#125; &#125; &#125; &#125;); 完美解决。]]></content>
      <tags>
        <tag>android、ExpandableListView、EditText</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[listView和RadioButton的故事]]></title>
    <url>%2F2017%2F11%2F06%2FlistView%E5%92%8CRadioButton%E7%9A%84%E6%95%85%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[问题描述：在xml布局中为RadioButton设置默认选中12345678910111213141516171819202122232425&lt;RadioGroup android:id=&quot;@+id/rg&quot; android:layout_width=&quot;0dp&quot; android:layout_height=&quot;wrap_content&quot; android:layout_weight=&quot;60&quot; android:orientation=&quot;horizontal&quot; android:paddingLeft=&quot;20dp&quot;&gt; &lt;RadioButton android:id=&quot;@+id/yes_rb&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;是&quot; android:textColor=&quot;@android:color/black&quot; /&gt; &lt;RadioButton android:id=&quot;@+id/no_rb&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;match_parent&quot; android:layout_marginLeft=&quot;10dp&quot; android:checked=&quot;true&quot; android:text=&quot;否&quot; android:textColor=&quot;@android:color/black&quot; /&gt;&lt;/RadioGroup&gt; 发现在ListView 初始化以后id 为no_rb的RadioButon无法取消掉，原因不明。 解决办法：在代码中设置默认选中， RadioButton rb = (RadioButton) view.findViewById(R.id.no_rb); rb.setChecked(true);]]></content>
      <tags>
        <tag>listView、RadioButton</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ListView和EditText解决方案]]></title>
    <url>%2F2017%2F11%2F06%2FListView%E5%92%8CEditText%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[问题：ListView 嵌套EditText, EditText无法获取焦点问题 关注点：android:descendantFocusability 参考资料 12345&lt;ListView android:id=&quot;@+id/listView&quot; android:descendantFocusability=&quot;afterDescendants&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; /&gt;]]></content>
      <tags>
        <tag>listView、EditText</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用命令]]></title>
    <url>%2F2017%2F10%2F27%2FGit%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[使用git fetch&amp;&amp;git merge origin/master 代替git pull master 查看local 分支与对应的远程分支的差异：git diff master origin/master]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git问题记录]]></title>
    <url>%2F2017%2F09%2F26%2Fgit%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[​ ​ 问题： ​ error: src refspec feature_elevator does not match any.error: failed to push some refs to ‘git@git.iqdnet.cn:qdp/qdp-guanjia-android.git’ 解决： ​ git push origin HEAD:feature_elevator​ 问题：git checkout commitId 后会创建一个临时分支比如(HEAD detached at 4eb6b46e)如果修改了内容是不能commit的，如果想commit怎么办呢 解决：可以通过 git branch [分支名字] [commitId] 创建一个新的分支然后在新的分支上commit在merge到主分支上。]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[charalsTools-MappingRemote]]></title>
    <url>%2F2017%2F09%2F08%2FcharalsTools-MappingRemote%2F</url>
    <content type="text"><![CDATA[问题场景： ​ 我们app调试的时候为了方便写自测数据，可以使用charals的Mapping Remote的工具来帮我们重定向这样我们就可以使用本机搭建的web测试环境来返回我们想要的自测数据了。 charals — tools — Mapping Remote 设置如下图：]]></content>
      <tags>
        <tag>charals</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[docker]]></title>
    <url>%2F2017%2F08%2F28%2Fdocker%2F</url>
    <content type="text"><![CDATA[docker 安装 docker 换阿里云源 docker 常用命令 docker 给debian换源 docker 给没有安装vim的机器安装vim过程 docker commit 的使用实例 docker build的使用实例]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github收藏]]></title>
    <url>%2F2017%2F08%2F22%2Fgithub%E6%94%B6%E8%97%8F%2F</url>
    <content type="text"><![CDATA[React-NativeReact-Native-Apps]]></content>
      <tags>
        <tag>github、开源学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python之pyc文件]]></title>
    <url>%2F2017%2F08%2F10%2Fpython%E4%B9%8Bpyc%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[简述Python的运行过程 ​ 在说这个问题之前，先了解两个概念，PyCodeObject和pyc文件。我们在硬盘上看到的pyc是PyCodeObject序列化后的文件。当python程序运行时，编译的结果则是保存在位于内存中的PyCodeObject中，当Python程序运行结束时，Python解释器将PyCodeObject写回到pyc文件中。当python程序第二次运行的时候，首先程序会在硬盘中寻找pyc文件，如果找到，则直接载入，否则就重复上面的过程。所以我们应该这样定位PyCodeObject和pyc文件，pyc文件其实是PyCodeObject的一种持久化保存方式。 pyc的目的是重用 pyc的过期时间 每次pyc载入内存中之前会先检查一下py文件和pyc文件保存的最后修改日期，如果不一致则重新生成一份pyc文件 扩展阅读：运行Python脚本时生成的pycache文件夹]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python编程命名规范]]></title>
    <url>%2F2017%2F08%2F10%2Fpython%E7%BC%96%E7%A8%8B%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[项目名 12首字母大写，其余小写单词，若多个单词组合可以添加“_” 下划线增加可读性Ui_test ​ 包名、模块名 12全部小写字母package、module ​123 首字母大写，其它字母小写，若多个单词时，使用驼峰命名法，UserLoginclass Login:​ 方法名 ​123小写单词，多个单词时，用下划线分割单词以增加可读性def user_login()​ 参数名 ​12345小写单词def user_login(self)如果函数的参数名与保留关键字冲突，在参数名前面加一个下划线，比用缩写、错误的拼写要好因此&quot;_print&quot; 比”&quot;prnt&quot;好​ 普通变量名 ​1234567891011小写字母，单词之间用_分割或者遵守驼峰原则命名month_pay = 2000monthPay = 2000注意：1. 不论是类成员变量还是全局变量，均不是用m 或 g 前缀2. 私有类成员变量使用单一下划线前缀标识，多定义公开成员，少定义私有成员3. 变量名不应该带有类型信息，因为Python是动态类型语言。如iValue、names_list、dict_obj等都是不好的命名4. 开头，结尾，一般为python的自由变量，不要以这种方式命名5. 以__开头(2个下划线)，是私有实例变量​ 7. 常量 ​12常量定义全部为大写，必要的时可用下划线分割单词以增加可读性​]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python 类库引入机制]]></title>
    <url>%2F2017%2F08%2F09%2Fpython-import%2F</url>
    <content type="text"><![CDATA[Python 的两种引入机制 121. relative import2. absolute import relative import 1234relative import 也叫作相对引入，在python2.5及以前是默认的引入方法。from .string import afrom ..string import afrom ...string import a ​]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[找房爬虫]]></title>
    <url>%2F2017%2F08%2F09%2F%E6%89%BE%E6%88%BF%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[scrapy 库介绍 1scrapy 是一个为了爬取网站数据，提取结构性数据而编写的应用框架]]></content>
      <tags>
        <tag>python,爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mac 下给pip换源]]></title>
    <url>%2F2017%2F08%2F09%2F%E7%BB%99pip%E6%8D%A2%E6%BA%90%2F</url>
    <content type="text"><![CDATA[在终端进入目录：cd ~/ 如果没有 .pip 文件夹，那么就新建这个文件夹，mkdir .pip 然后在 .pip 文件夹内新建一个文件 touch pip.conf 编辑pip.conf 文件，写入第三方源 12345678阿里云： [global] index-url = http://mirrors.aliyun.com/pypi/simple/ [install] trusted-host=mirrors.aliyun.com 12345678豆瓣： [global] index-url = http://pypi.douban.com/simple [install] trusted-host=pypi.douban.com 1234清华： [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple]]></content>
      <tags>
        <tag>pip,mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pass密码保存工具]]></title>
    <url>%2F2017%2F08%2F05%2Fpass%E5%AF%86%E7%A0%81%E4%BF%9D%E5%AD%98%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[安装 1mac 系统：brew install pass 生成GPG密匙对 12gpg --gen-key注意：运行以上的命令以生成 GPG 密钥对时会有一系列的问题询问，谨慎输入问题的答案，其中有一些只要使用默认值即可 初始化密码存储 1pass init s_abcabc@126.com 查看密码目录树 12345pass或pass ls或pass show 插入一个新密码 123pass insert &lt;密码路径&gt;例子：保存邮箱密码pass insert eMail/s_abcabc@126.com 显示已有密码 12345pass show &lt;密码路径&gt;例子：pass show eMail/s_abcabc@126.com会弹出一个对话框让你输入pass的密码输入完成后将会在终端显示s_abcabc@126.com邮箱的密码 生成密码 1234Generate new password zx2c4@laptop ~ $ pass generate Email/jasondonenfeld.com 15 The generated password to Email/jasondonenfeld.com is: $(-QF&amp;Q=IN2nFBx copy密码 1234Copy existing password to clipboard zx2c4@laptop ~ $ pass -c Email/zx2c4.com Copied Email/jason@zx2c4.com to clipboard. Will clear in 45 sec- onds.]]></content>
      <tags>
        <tag>pass、密码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pythonStudy]]></title>
    <url>%2F2017%2F08%2F04%2FpythonStudy%2F</url>
    <content type="text"><![CDATA[Python 中from… import 与 import…. as的区别 from… import ​ 如 from A import b,相当于 ​ import A ​ b = A.b ​ 再如： ​ “from t2 import var1” 相当于： ​ import t2 ​ var1 = t2.var1 ​ 在此过程中有一个隐含的赋值的过程 ​ import… as ​ import A as B，给予A库一个B的别称，帮助记忆。 pyCharm 当中使用VirtualEnv python 类 1type() :判断对象的类型]]></content>
  </entry>
  <entry>
    <title><![CDATA[fastJson将javabean转为Map]]></title>
    <url>%2F2017%2F07%2F10%2Fjson%2F</url>
    <content type="text"><![CDATA[问题：我们有时候希望写的javabean转换为Map方便数据操作，那么我们怎么做呢？ ​ 1234567891011答： Person person = new Person(); person.setUserName(&quot;盛艳明&quot;); person.setAge(27); //将javabean转为map Map map = JSON.toJSON(person); System.out.println(map.toString());]]></content>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用网址]]></title>
    <url>%2F2017%2F07%2F08%2F%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%2F</url>
    <content type="text"><![CDATA[vim 常用网址VimAwesome 很方便查找各种vim常用插件]]></content>
      <tags>
        <tag>常用网址统计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html5_study]]></title>
    <url>%2F2017%2F07%2F06%2Fhtml5-study%2F</url>
    <content type="text"><![CDATA[HTML 5 全局 contenteditable 属性 为了写一个富文本编辑器上个周末和这个周一真的很累，本来想着用一个开源大神写的richEdit来实现发现还是有很多局限性的，richedit 就是使用了html 5的一个global 属性contenteditable属性让div具有了可编辑内容的效果，但是如果我想在div中添加一个图片，图片点击后右上角会出现一个删除按钮这样稍微复杂一些的操作就不行了，因为这个属性是让div里面包含的所有的子元素都可以编辑。 我认为的知识点 html dom tagName 属性 ​ 定义和用法 tagName 属性返回元素的标签名。 在 HTML 中，tagName 属性的返回值始终是大写的。]]></content>
  </entry>
  <entry>
    <title><![CDATA[gitsubnodule的使用]]></title>
    <url>%2F2017%2F07%2F02%2Fgitsubnodule%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[git 仓库中添加子仓库 git submodule add &lt;子module的远程仓库地址&gt; git 删除子仓库 Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules. Delete the relevant section from .git/config . Run git rm –cached path_to_submodule (no trailing slash). Run rm -rf .git/modules/path_to_submodule. 问题记录：问题一： 重新add子module的时候提示： ‘repo’ already exists in the index 解决办法： 123456789$ rm -Rf rack/$ git submodule add git@github.com:schacon/rack.git rack&apos;rack&apos; already exists in the indexYou have to unstage the rack directory first. Then you can add the submodule:$ git rm -r rack$ git submodule add git@github.com:schacon/rack.git rack ​ 在.gitmodules配置文件中删除子module的相关配置后要记得使用 git rm –cached path_to_submodule (no trailing slash).删除缓存否则别人删除的子module会一直报url找不到的错误]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[learn_git]]></title>
    <url>%2F2017%2F07%2F01%2Flearn-git%2F</url>
    <content type="text"><![CDATA[git path的用法git 配置冲突合并工具KDiff3123git config --global --add diff.guitool kdiff3git config --global --add difftool.kdiff3.path &quot;/Applications/kdiff3.app/Contents/MacOS/kdiff3&quot;git config --global --add difftool.kdiff3.trustExitCode false KDiff3下载地址]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo常用命令总结]]></title>
    <url>%2F2017%2F07%2F01%2Farticle-title%2F</url>
    <content type="text"><![CDATA[新写一篇blog:hexo new post &quot;article-tile&quot; 这个时候就可以在hexo根目录下的source\_posts下看到新生成的文件article-title.md 生成hexo g 部署hexo d 上面的两个命令可以组合成一个 ​ 还可以使用组合命令：hexo g -d 以上内容是生成和发布博客的一般流程，下面我记录一下我的github + hexo搭建流程供有需要的人参考和学习 申请github 这个就不多说了 建立github.io 这个自己可以百度一下教程 搭建hexo !官网 :有详细的使用说明，本教程就是说明一下其中常用的 安装Node.js $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash nvm install stable 安装hexo npm install -g hexo-cli hexo init cd npm install 安装主题 Yilia NexT 1这些都有相关的教程可以去github上搜索，然后看教程配置使用 ​]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
